{"version":3,"sources":["components/Expenses/ExpenseDate.js","components/UI/Card.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Expenses/ExpensesFilter.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["ExpenseDate","props","day","date","toLocaleString","month","year","className","Card","children","ExpenseItem","title","amount","ExpensesList","filteredExpenses","length","map","expense","id","ExpensesFilter","value","selectedYear","onChange","e","onSelectedYear","target","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointsValue","dataPoints","dataPoint","totalMaximumValue","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","useState","setSelectedYear","filter","getFullYear","toString","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onClick","onCancel","NewExpense","isAddingExpense","setIsAddingExpense","enteredExpenseData","random","onAddExpense","DUMMY_DATA","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"4ZAgBeA,EAdK,SAACC,GACnB,IAAMC,EAAMD,EAAME,KAAKC,eAAe,QAAS,CAAEF,IAAK,YAChDG,EAAQJ,EAAME,KAAKC,eAAe,QAAS,CAAEC,MAAO,SACpDC,EAAOL,EAAME,KAAKC,eAAe,QAAS,CAAEE,KAAM,YAExD,OACE,sBAAKC,UAAU,eAAf,UACE,qBAAKA,UAAU,oBAAf,SAAoCL,IACpC,qBAAKK,UAAU,sBAAf,SAAsCF,IACtC,qBAAKE,UAAU,qBAAf,SAAqCD,QCH5BE,G,MANF,SAACP,GACZ,OACE,qBAAKM,UAAS,eAAUN,EAAMM,WAA9B,SAA4CN,EAAMQ,aCcvCC,G,MAdK,SAACT,GACnB,OACE,6BACE,eAAC,EAAD,CAAMM,UAAU,eAAhB,UACE,cAAC,EAAD,CAAaJ,KAAMF,EAAME,OACzB,sBAAKI,UAAU,4BAAf,UACE,6BAAKN,EAAMU,QACX,sBAAKJ,UAAU,sBAAf,cAAuCN,EAAMW,oBCMxCC,G,MAdM,SAACZ,GAEpB,OAAsC,IAAlCA,EAAMa,iBAAiBC,OAClB,oBAAIR,UAAU,0BAAd,kCAIP,oBAAIA,UAAU,gBAAd,SACGN,EAAMa,iBAAiBE,KAAI,SAAAC,GAAO,OAAI,cAAC,EAAD,CAA8BN,MAAOM,EAAQN,MAAOC,OAAQK,EAAQL,OAAQT,KAAMc,EAAQd,MAAxEc,EAAQC,WCWxDC,G,MApBQ,SAAClB,GAKtB,OACE,qBAAKM,UAAU,kBAAf,SACE,sBAAKA,UAAU,2BAAf,UACE,mDACA,yBAAQa,MAAOnB,EAAMoB,aAAcC,SARnB,SAACC,GACrBtB,EAAMuB,eAAeD,EAAEE,OAAOL,QAO1B,UACE,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,4B,OCIKM,G,YAjBE,SAACzB,GAChB,IAAI0B,EAAgB,KAMpB,OAJI1B,EAAM2B,SAAW,IACnBD,EAAgBE,KAAKC,MAAO7B,EAAMmB,MAAQnB,EAAM2B,SAAY,KAAO,KAInE,sBAAKrB,UAAU,YAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,qBAAKA,UAAU,kBAAkBwB,MAAO,CAAEC,OAAQL,OAEpD,qBAAKpB,UAAU,mBAAf,SAAmCN,EAAMgC,aCGhCC,EAbD,SAACjC,GACb,IAAMkC,EAAkBlC,EAAMmC,WAAWpB,KAAI,SAAAqB,GAAS,OAAIA,EAAUjB,SAC9DkB,EAAoBT,KAAKU,IAAL,MAAAV,KAAI,YAAQM,IAEtC,OACE,cAAC,EAAD,UACE,qBAAK5B,UAAU,QAAf,SACGN,EAAMmC,WAAWpB,KAAI,SAAAqB,GAAS,OAAI,cAAC,EAAD,CAAgCjB,MAAOiB,EAAUjB,MAAOa,MAAOI,EAAUJ,MAAOL,SAAUU,GAA3ED,EAAUJ,eCiBrDO,EA1BO,SAACvC,GACrB,IAD+B,EACzBwC,EAAkB,CACtB,CAAER,MAAO,MAAOb,MAAO,GACvB,CAAEa,MAAO,MAAOb,MAAO,GACvB,CAAEa,MAAO,MAAOb,MAAO,GACvB,CAAEa,MAAO,MAAOb,MAAO,GACvB,CAAEa,MAAO,MAAOb,MAAO,GACvB,CAAEa,MAAO,MAAOb,MAAO,GACvB,CAAEa,MAAO,MAAOb,MAAO,GACvB,CAAEa,MAAO,MAAOb,MAAO,GACvB,CAAEa,MAAO,MAAOb,MAAO,GACvB,CAAEa,MAAO,MAAOb,MAAO,GACvB,CAAEa,MAAO,MAAOb,MAAO,GACvB,CAAEa,MAAO,MAAOb,MAAO,IAbM,cAgBTnB,EAAMyC,UAhBG,IAgB/B,2BAAsC,CAAC,IAA5BzB,EAA2B,QAEpCwB,EADqBxB,EAAQd,KAAKwC,YACJvB,OAASH,EAAQL,QAlBlB,8BAqB/B,OACE,cAAC,EAAD,CAAOwB,WAAYK,KCCRG,G,MAlBE,SAAC3C,GAChB,MAAwC4C,mBAAS,QAAjD,mBAAOxB,EAAP,KAAqByB,EAArB,KAMMhC,EAAmBb,EAAMyC,SAASK,QAAO,SAAA9B,GAAO,OAAIA,EAAQd,KAAK6C,cAAcC,aAAe5B,KAEpG,OACE,eAAC,EAAD,CAAMd,UAAU,WAAhB,UACE,cAAC,EAAD,CAAgBc,aAAcA,EAAcG,eARxB,SAAClB,GACvBwC,EAAgBxC,MAQd,cAAC,EAAD,CAAeoC,SAAU5B,IACzB,cAAC,EAAD,CAAcA,iBAAkBA,S,OCuCvBoC,G,YAxDK,SAACjD,GACnB,MAAwC4C,mBAAS,IAAjD,mBAAOM,EAAP,KAAqBC,EAArB,KACA,EAA0CP,mBAAS,IAAnD,mBAAOQ,EAAP,KAAsBC,EAAtB,KACA,EAAsCT,mBAAS,IAA/C,mBAAOU,EAAP,KAAoBC,EAApB,KA6BA,OACE,uBAAMC,SAhBc,SAAClC,GACrBA,EAAEmC,iBAEF,IAAMC,EAAc,CAClBhD,MAAOwC,EACPvC,QAASyC,EACTlD,KAAM,IAAIyD,KAAKL,IAGjBtD,EAAM4D,kBAAkBF,GACxBP,EAAgB,IAChBE,EAAiB,IACjBE,EAAe,KAIf,UACE,sBAAKjD,UAAU,wBAAf,UACE,sBAAKA,UAAU,uBAAf,UACE,0CACA,uBAAOuD,KAAK,OAAO1C,MAAO+B,EAAc7B,SAhCrB,SAACC,GAC1B6B,EAAgB7B,EAAEE,OAAOL,aAiCrB,sBAAKb,UAAU,uBAAf,UACE,2CACA,uBAAOuD,KAAK,SAASC,IAAI,OAAOC,KAAK,OAAO5C,MAAOiC,EAAe/B,SAhC9C,SAACC,GAC3B+B,EAAiB/B,EAAEE,OAAOL,aAiCtB,sBAAKb,UAAU,uBAAf,UACE,yCACA,uBAAOuD,KAAK,OAAOC,IAAI,aAAaxB,IAAI,aAAanB,MAAOmC,EAAajC,SAhCvD,SAACC,GACzBiC,EAAejC,EAAEE,OAAOL,gBAkCtB,sBAAKb,UAAU,uBAAf,UACE,wBAAQuD,KAAK,SAASG,QAAShE,EAAMiE,SAArC,oBACA,wBAAQJ,KAAK,SAAb,iCCrBOK,EA5BI,SAAClE,GAClB,MAA8C4C,oBAAS,GAAvD,mBAAOuB,EAAP,KAAwBC,EAAxB,KAmBA,OACE,sBAAK9D,UAAU,cAAf,WACI6D,GAAmB,wBAAQH,QAVT,WACtBI,GAAmB,IASI,6BACpBD,GAAmB,cAAE,EAAF,CAAcP,kBApBP,SAACS,GAC9B,IAAMX,EAAW,2BACZW,GADY,IAEfpD,GAAIW,KAAK0C,SAAStB,aAEpBhD,EAAMuE,aAAab,GACnBU,GAAmB,IAc4DH,SAPzD,WACtBG,GAAmB,UCjBjBI,EAAa,CACjB,CACEvD,GAAI,KACJP,MAAO,kBACPC,OAAQ,GACRT,KAAM,IAAIyD,KAAK,KAAM,EAAG,KAE1B,CACE1C,GAAI,KACJP,MAAO,kBACPC,OAAQ,IACRT,KAAM,IAAIyD,KAAK,KAAM,EAAG,KAE1B,CACE1C,GAAI,KACJP,MAAO,kBACPC,OAAQ,IACRT,KAAM,IAAIyD,KAAK,KAAM,GAAI,KAE3B,CACE1C,GAAI,KACJP,MAAO,kBACPC,OAAQ,OACRT,KAAM,IAAIyD,KAAK,KAAM,GAAI,KAE3B,CACE1C,GAAI,KACJP,MAAO,kBACPC,OAAQ,OACRT,KAAM,IAAIyD,KAAK,KAAM,EAAG,KAE1B,CACE1C,GAAI,KACJP,MAAO,kBACPC,OAAQ,IACRT,KAAM,IAAIyD,KAAK,KAAM,GAAI,IAE3B,CACE1C,GAAI,KACJP,MAAO,kBACPC,OAAQ,GACRT,KAAM,IAAIyD,KAAK,KAAM,EAAG,KAE1B,CACE1C,GAAI,KACJP,MAAO,kBACPC,OAAQ,KACRT,KAAM,IAAIyD,KAAK,KAAM,EAAG,KAE1B,CACE1C,GAAI,KACJP,MAAO,kBACPC,OAAQ,KACRT,KAAM,IAAIyD,KAAK,KAAM,EAAG,IAE1B,CACE1C,GAAI,MACJP,MAAO,mBACPC,OAAQ,MACRT,KAAM,IAAIyD,KAAK,KAAM,EAAG,MAmBbc,EAfH,WACV,MAAgC7B,mBAAS4B,GAAzC,mBAAO/B,EAAP,KAAiBiC,EAAjB,KAMA,OACE,gCACE,cAAC,EAAD,CAAYH,aANU,SAACvD,GACzB0D,GAAY,SAAAC,GAAY,OAAK3D,GAAL,mBAAiB2D,UAMvC,cAAC,EAAD,CAAUlC,SAAUA,QCxE1BmC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.04193da8.chunk.js","sourcesContent":["import './ExpenseDate.css';\n\nconst ExpenseDate = (props) => {\n  const day = props.date.toLocaleString('en-US', { day: 'numeric' });\n  const month = props.date.toLocaleString('en-US', { month: 'long' });\n  const year = props.date.toLocaleString('en-US', { year: 'numeric' });\n\n  return (\n    <div className='expense-date'>\n      <div className='expense-date__day'>{day}</div>\n      <div className='expense-date__month'>{month}</div>\n      <div className='expense-date__year'>{year}</div>\n    </div>\n  );\n};\n\nexport default ExpenseDate;","import './Card.css';\n\nconst Card = (props) => {\n  return (\n    <div className={`card ${props.className}`}>{props.children}</div>\n  );\n};\n\nexport default Card;","import ExpenseDate from './ExpenseDate';\nimport Card from '../UI/Card';\nimport './ExpenseItem.css';\n\nconst ExpenseItem = (props) => {\n  return (\n    <li>\n      <Card className='expense-item'>\n        <ExpenseDate date={props.date} />\n        <div className='expense-item__description'>\n          <h2>{props.title}</h2>\n          <div className='expense-item__price'>${props.amount}</div>\n        </div>\n      </Card>\n    </li>\n  );\n};\n\nexport default ExpenseItem;","import ExpenseItem from './ExpenseItem';\nimport './ExpensesList.css';\n\nconst ExpensesList = (props) => {\n\n  if (props.filteredExpenses.length === 0) {\n    return <h2 className='expenses-list__fallback'>No expenses found...</h2>;\n  }\n\n  return (\n    <ul className='expenses-list'>\n      {props.filteredExpenses.map(expense => <ExpenseItem key={expense.id} title={expense.title} amount={expense.amount} date={expense.date} />)}\n    </ul>\n  );\n\n};\n\nexport default ExpensesList;","import './ExpensesFilter.css';\n\nconst ExpensesFilter = (props) => {\n  const changeHandler = (e) => {\n    props.onSelectedYear(e.target.value);\n  };\n\n  return (\n    <div className='expenses-filter'>\n      <div className='expenses-filter__control'>\n        <label>Filter by year</label>\n        <select value={props.selectedYear} onChange={changeHandler}>\n          <option value='2022'>2022</option>\n          <option value='2021'>2021</option>\n          <option value='2020'>2020</option>\n          <option value='2019'>2019</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;","import './ChartBar.css';\n\nconst ChartBar = (props) => {\n  let barFillHeight = '0%';\n\n  if (props.maxValue > 0) {\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\n  }\n\n  return (\n    <div className='chart-bar'>\n      <div className='chart-bar__inner'>\n        <div className='chart-bar__fill' style={{ height: barFillHeight }}></div>\n      </div>\n      <div className='chart-bar__label'>{props.label}</div>\n    </div>\n  );\n};\n\nexport default ChartBar;","import Card from '../UI/Card';\nimport './Chart.css';\nimport ChartBar from './ChartBar';\n\nconst Chart = (props) => {\n  const dataPointsValue = props.dataPoints.map(dataPoint => dataPoint.value);\n  const totalMaximumValue = Math.max(...dataPointsValue);\n\n  return (\n    <Card>\n      <div className='chart'>\n        {props.dataPoints.map(dataPoint => <ChartBar key={dataPoint.label} value={dataPoint.value} label={dataPoint.label} maxValue={totalMaximumValue} />)}\n      </div>\n    </Card>\n  );\n};\n\nexport default Chart;","import Chart from '../Chart/Chart';\n\nconst ExpensesChart = (props) => {\n  const chartDataPoints = [\n    { label: 'Jan', value: 0 },\n    { label: 'Feb', value: 0 },\n    { label: 'Mar', value: 0 },\n    { label: 'Apr', value: 0 },\n    { label: 'May', value: 0 },\n    { label: 'Jun', value: 0 },\n    { label: 'Jul', value: 0 },\n    { label: 'Aug', value: 0 },\n    { label: 'Sep', value: 0 },\n    { label: 'Oct', value: 0 },\n    { label: 'Nov', value: 0 },\n    { label: 'Dec', value: 0 }\n  ];\n\n  for (const expense of props.expenses) {\n    const expenseMonth = expense.date.getMonth();\n    chartDataPoints[expenseMonth].value += expense.amount;\n  }\n\n  return (\n    <Chart dataPoints={chartDataPoints} />\n  );\n};\n\nexport default ExpensesChart;","import { useState } from 'react';\nimport ExpensesList from './ExpensesList';\nimport ExpensesFilter from './ExpensesFilter';\nimport ExpensesChart from './ExpensesChart';\nimport Card from '../UI/Card';\nimport './Expenses.css';\n\nconst Expenses = (props) => {\n  const [selectedYear, setSelectedYear] = useState('2022');\n\n  const addSelectedYear = (year) => {\n    setSelectedYear(year);\n  };\n\n  const filteredExpenses = props.expenses.filter(expense => expense.date.getFullYear().toString() === selectedYear);\n\n  return (\n    <Card className='expenses'>\n      <ExpensesFilter selectedYear={selectedYear} onSelectedYear={addSelectedYear} />\n      <ExpensesChart expenses={filteredExpenses} />\n      <ExpensesList filteredExpenses={filteredExpenses} />\n    </Card>\n  );\n};\n\nexport default Expenses;","import { useState } from 'react';\nimport './ExpenseForm.css';\n\nconst ExpenseForm = (props) => {\n  const [enteredTitle, setEnteredTitle] = useState('');\n  const [enteredAmount, setEnteredAmount] = useState('');\n  const [enteredDate, setEnteredDate] = useState('');\n\n  const titleChangeHandler = (e) => {\n    setEnteredTitle(e.target.value);\n  };\n\n  const amountChangeHandler = (e) => {\n    setEnteredAmount(e.target.value);\n  };\n\n  const dateChangeHandler = (e) => {\n    setEnteredDate(e.target.value);\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    const expenseData = {\n      title: enteredTitle,\n      amount: +enteredAmount,\n      date: new Date(enteredDate)\n    };\n\n    props.onSaveExpenseData(expenseData);\n    setEnteredTitle('');\n    setEnteredAmount('');\n    setEnteredDate('');\n  };\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className='new-expense__controls'>\n        <div className='new-expense__control'>\n          <label>Title</label>\n          <input type='text' value={enteredTitle} onChange={titleChangeHandler} />\n        </div>\n        <div className='new-expense__control'>\n          <label>Amount</label>\n          <input type='number' min='0.01' step='0.01' value={enteredAmount} onChange={amountChangeHandler} />\n        </div>\n        <div className='new-expense__control'>\n          <label>Date</label>\n          <input type='date' min='2019-01-01' max='2022-12-31' value={enteredDate} onChange={dateChangeHandler} />\n        </div>\n      </div>\n      <div className='new-expense__actions'>\n        <button type='button' onClick={props.onCancel}>Cancel</button>\n        <button type='submit'>Add Expense</button>\n      </div>\n    </form>\n  );\n};\n\nexport default ExpenseForm;","import { useState } from 'react';\nimport './NewExpense.css';\nimport ExpenseForm from './ExpenseForm';\n\nconst NewExpense = (props) => {\n  const [isAddingExpense, setIsAddingExpense] = useState(false);\n\n  const saveExpenseDataHandler = (enteredExpenseData) => {\n    const expenseData = {\n      ...enteredExpenseData,\n      id: Math.random().toString()\n    };\n    props.onAddExpense(expenseData);\n    setIsAddingExpense(false);\n  };\n\n  const showFormHandler = () => {\n    setIsAddingExpense(true);\n  };\n\n  const hideFormHandler = () => {\n    setIsAddingExpense(false);\n  };\n\n  return (\n    <div className='new-expense'>\n      {!isAddingExpense && <button onClick={showFormHandler}>Add New Expense</button>}\n      {isAddingExpense && < ExpenseForm onSaveExpenseData={saveExpenseDataHandler} onCancel={hideFormHandler} />}\n    </div>\n  );\n};\n\nexport default NewExpense;","import { useState } from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst DUMMY_DATA = [\n  {\n    id: 'e1',\n    title: 'Dummy Expense 1',\n    amount: 75,\n    date: new Date(2020, 5, 15)\n  },\n  {\n    id: 'e2',\n    title: 'Dummy Expense 2',\n    amount: 149,\n    date: new Date(2020, 9, 17)\n  },\n  {\n    id: 'e3',\n    title: 'Dummy Expense 3',\n    amount: 529,\n    date: new Date(2021, 10, 27)\n  },\n  {\n    id: 'e4',\n    title: 'Dummy Expense 4',\n    amount: 379.49,\n    date: new Date(2022, 11, 31)\n  },\n  {\n    id: 'e5',\n    title: 'Dummy Expense 5',\n    amount: 199.99,\n    date: new Date(2021, 2, 25)\n  },\n  {\n    id: 'e6',\n    title: 'Dummy Expense 6',\n    amount: 879,\n    date: new Date(2022, 10, 8)\n  },\n  {\n    id: 'e7',\n    title: 'Dummy Expense 7',\n    amount: 69,\n    date: new Date(2021, 4, 22)\n  },\n  {\n    id: 'e8',\n    title: 'Dummy Expense 8',\n    amount: 1025,\n    date: new Date(2022, 3, 12)\n  },\n  {\n    id: 'e9',\n    title: 'Dummy Expense 9',\n    amount: 4980,\n    date: new Date(2022, 1, 4)\n  },\n  {\n    id: 'e10',\n    title: 'Dummy Expense 10',\n    amount: 12.99,\n    date: new Date(2022, 4, 10)\n  }\n];\n\nconst App = () => {\n  const [expenses, setExpenses] = useState(DUMMY_DATA);\n\n  const addExpenseHandler = (expense) => {\n    setExpenses(prevExpenses => [expense, ...prevExpenses]);\n  };\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses expenses={expenses} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}